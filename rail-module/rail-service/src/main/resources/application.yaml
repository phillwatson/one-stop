# configure production datasource
"%prod":
  quarkus:
    datasource:
      db-kind: postgresql
      #username: one-stop
      #password: password
      jdbc:
        url: jdbc:postgresql://db:5432/one-stop

quarkus:
  hibernate-orm:
    database:
      default-schema: rails

  flyway:
    migrate-at-start: true
    schemas: ${quarkus.hibernate-orm.database.default-schema}

  log:
    min-level: TRACE
    level: INFO
    console:
      format: "%d{yyyy-MM-dd HH:mm:ss,S} %-5p %X{correlationId} - [%c{3.}] (%t) %s%e%n"
    category:
      "io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator":
        level: INFO
      "org.jose4j.jwk":
        level: INFO
      "org.apache.kafka":
        level: WARN
      "org.apache.http.wire":
        level: INFO
      "com.hillayes":
        level: DEBUG

  native:
    resources:
      includes: "country-logos/**"

one-stop:
  rail:
    countries:
      - id: GB
        name: Great Britain
        flag-uri: /country-logos/gb.png
      - id: DE
        name: Germany
        flag-uri: /country-logos/de.png
      - id: FR
        name: France
        flag-uri: /country-logos/fr.png
      - id: IT
        name: Italy
        flag-uri: /country-logos/it.png
      - id: PT
        name: Portugal
        flag-uri: /country-logos/pt.png

    uncategorised-name: UNCATEGORISED

    caches: # the duration of various caches - specified as Duration string
      institutions: PT6H
      account-details: PT5H

    # The duration that a consent registration will wait until timed-out
    consent-timeout: PT10M

  scheduler:
    schema: ${quarkus.hibernate-orm.database.default-schema}
    tasks:
      # nightly task to check consents are still valid
      # and refresh all account details
      poll-all-consents:
        frequency:
          time-of-day: "02:00:00"
        on-failure:
          max-retry: 3
          retry-interval: PT1M

      # jobbing tasks to check the identified consent is still valid
      # and refresh the account details
      poll-consent:
        on-failure: # gives a max of 16 minutes
          max-retry: 4
          retry-interval: PT2M
          retry-exponent: 1.5

      # jobbing tasks to refresh the identified account details
      poll-account:
        on-failure: # gives a max of 16 minutes
          max-retry: 4
          retry-interval: PT2M
          retry-exponent: 1.5
