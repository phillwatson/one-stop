title On-Boarding Users

participant client
participant user-service
participant magic-token-repo
participant user-repo
participant broker
participant email-service

client->user-service:POST /api/v1/users/onboard/register\n{\n  "email": "xxxx"\n}
activate client
activate user-service
alt#lightblue email already exists
client<--user-service:http 409
else
user-service->user-service:generate magic-token
rbox over user-service,magic-token-repo#lightblue:magic token is a random secret\n with expiry of 5 minutes.\na nightly task will delete expired\n token records.
user-service->magic-token-repo:save(email,token)
user-service->broker:user-registered(email,magic-token)
client<--user-service:http 200
end
deactivateafter user-service
deactivateafter client
broker->email-service:user-registered(user,magic-token)
activate email-service
email-service->email-service:send magic-link email
deactivateafter email-service


rbox right of client#lightblue:User receives email with\n magic-link
client->user-service:GET /api/v1/users/onboard/acknowledge/{magic-token}
activate client
activate user-service
user-service->magic-token-repo:find(token)
alt#lightblue token not-found
client<--user-service:http 401
else token expired
client<--user-service:http 401
else valid
user-service->magic-token-repo:delete(token)
user-service->user-repo:save(email,status: PENDING)
rbox over user-service,user-repo#lightblue:a random username and password\n are assigned.\na nightly task will delete expired\n pending users.
user-service->broker:user-acknowledged(user)
client<--user-service:http 307: set password page
end
deactivateafter user-service
deactivateafter client


rbox right of client#lightblue:User completes form with a\n username and password
client->user-service:PUT /api/v1/users/onboard/complete\n{\n  "username": "jane"\n  "password": "My-New-Account-29"\n}
activate client
activate user-service
alt#lightblue password not acceptable
client<--user-service:http 409
else username already taken

client<--user-service:http 409
else
user-service->user-repo:save(username, password, status: ONBOARDED)
user-service->broker:user-confirmed(user)
client<--user-service:http 204
end
deactivateafter user-service
deactivateafter client

broker->email-service:user-confirmed(user)
email-service->email-service:send welcome email
