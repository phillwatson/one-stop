title On-Boarding Users

participant client
participant user-service
participant magic-token-repo
participant user-repo
participant broker
participant email-service

rbox right of client#lightblue:New user wishes to onboard
client->user-service:POST /api/v1/users/onboard/register\n{\n  "email": "xxxx"\n}
activate client
activate user-service
rbox over client,user-service#lightblue:end-point requires no authorisation
alt#lightblue email already exists
client<--user-service:http 202
rbox over client,user-service#lightblue:sending 409 risks hackers using\nthe endpoint to search for users

user-service->broker:user-registered-again(user)
else
user-service->user-service:generate magic-token
rbox over user-service,user-repo#lightblue:magic token is a random value with\n expiry of 5 minutes.\na nightly task will delete expired\n token records.
user-service->magic-token-repo:save(email,token)
user-service->broker:user-registered(email,magic-token)
client<--user-service:http 202
end
deactivateafter user-service
deactivateafter client
broker->email-service:user-registered-again(user)
activate email-service
email-service->email-service:send email to warn that "someone is attempting\n to register with your email"
deactivateafter email-service

broker->email-service:user-registered(user,magic-token)
activate email-service
email-service->email-service:send link to\nGET /api/v1/users/onboard/acknowledge/{magic-token}
deactivateafter email-service


rbox right of client#lightblue:User receives email with magic-token
client->user-service:GET /api/v1/users/onboard/acknowledge/{magic-token}
activate client
activate user-service
rbox over client,user-service#lightblue:end-point requires no authorisation
user-service->magic-token-repo:find(token)
alt#lightblue token not-found
client<--user-service:http 401
else token expired
client<--user-service:http 401
else valid
user-service->magic-token-repo:delete(token)
user-service->user-repo:save(email, role: "onboarding", created: now())
rbox over user-service,user-repo#lightblue:role of "onboarding" assigned to restrict what the\nuser can access.\n\na random username and password are assigned.\na nightly task will delete expired onboarding users.
user-service->broker:user-acknowledged(user)
client<--user-service:http 307: onboard profile\n(with new JWT)
end
deactivateafter user-service

space
rbox right of client#lightblue:User completes form with a\n username and password
client->user-service:PUT /api/v1/users/onboard/complete\n{\n  "username": "jane",\n  "password": "My-New-Account-29",\n  "email": "jane@work.com"\n  ...\n}
activate user-service
rbox over client,user-service#lightblue:end-point authorisation requires role "onboarding"
alt#lightblue password not acceptable
client<--user-service:http 409
else username already taken

client<--user-service:http 409
else email already taken

client<--user-service:http 409
else
user-service->user-repo:save(dateOnboarded: now(), role: "user")
user-service->broker:user-created(user)
client<--user-service:http 204\n(with new JWT)
end
deactivateafter user-service
deactivateafter client


broker->email-service:user-created(user)
activate email-service
email-service->email-service:create user record
email-service->email-service:send welcome email
deactivateafter email-service


