{
    "openapi": "3.0.3",
    "info": {
        "title": "Nordigen Account Information Services API",
        "version": "2.0 (v2)"
    },
    "paths": {
        "/api/v2/accounts/{id}/": {
            "get": {
                "operationId": "retrieve account metadata",
                "description": "Access account metadata.\n\nInformation about the account record, such as the processing status and IBAN.\n\nAccount status is recalculated based on the error count in the latest req.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A UUID string identifying this account."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountV2"
                                }
                            }
                        },
                        "description": "sample account metadata"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    },
                                    "AccountNotFoundError": {
                                        "value": {
                                            "summary": "Account ID $ACC_ID not found",
                                            "detail": "Please check whether you specified a valid Account ID",
                                            "status_code": 404
                                        },
                                        "summary": "Account not found error",
                                        "description": "Account not found"
                                    }
                                }
                            }
                        },
                        "description": null
                    }
                }
            }
        },
        "/api/v2/accounts/{id}/balances/": {
            "get": {
                "operationId": "accounts_balances_retrieve",
                "description": "Access account balances.\n\nBalances will be returned in Berlin Group PSD2 format.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A UUID string identifying this account."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "RetrieveAccountBalances": {
                                        "value": {
                                            "balances": [
                                                {
                                                    "balanceAmount": {
                                                        "amount": "657.49",
                                                        "currency": "string"
                                                    },
                                                    "balanceType": "string",
                                                    "referenceDate": "2021-11-22"
                                                },
                                                {
                                                    "balanceAmount": {
                                                        "amount": "185.67",
                                                        "currency": "string"
                                                    },
                                                    "balanceType": "string",
                                                    "referenceDate": "2021-11-19"
                                                }
                                            ]
                                        },
                                        "summary": "Account balances",
                                        "description": "Sample account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid Account ID",
                                            "detail": "$ACCOUNT_ID is not a valid Account UUID. ",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid Account ID"
                                    },
                                    "DateRangeError": {
                                        "value": {
                                            "summary": "Incorrect date range",
                                            "detail": "Starting date '2023-01-10' is greater than end date '2022-12-31'. When specifying date range, starting date must precede the end date",
                                            "status_code": 400
                                        },
                                        "summary": "Date range error",
                                        "description": "Incorrect date range in query parameters"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    },
                                    "AccessExpiredError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Access has expired or it has been revoked. To restore access reconnect the account.",
                                            "type": "AccessExpiredError",
                                            "status_code": 401
                                        },
                                        "summary": "Access Expired Error",
                                        "description": "Couldn't update account balances"
                                    },
                                    "AccountInactiveError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Account has been deactivated or it no longer exists.",
                                            "type": "AccountInactiveError",
                                            "status_code": 401
                                        },
                                        "summary": "Account Inactive Error",
                                        "description": "Couldn't update account balances"
                                    },
                                    "FailedAuthentication": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "SSN Verification has failed",
                                            "type": "FailedAuthentication",
                                            "status_code": 401
                                        },
                                        "summary": "Failed Authentication",
                                        "description": "Couldn't update account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    },
                                    "AccountEUAScopeError": {
                                        "value": {
                                            "summary": "End User Agreement (EUA) access scope error",
                                            "detail": "EUA doesn't allow access to account balances. Check EUA access scope. Or create new EUA with correct access scope",
                                            "status_code": 403
                                        },
                                        "summary": "Account EUA scope error",
                                        "description": "EUA doesn't allow access to account balances."
                                    },
                                    "AccountValidEUAError": {
                                        "value": {
                                            "summary": "No valid End User Agreement",
                                            "detail": "Account exists but there is no valid End User Agreement permitting you to access it",
                                            "status_code": 403
                                        },
                                        "summary": "Account valid EUA error",
                                        "description": "Account has no valid End User Agreement"
                                    },
                                    "AccountAccessForbidden": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Access to account is forbidden. The user might not have the necessary permissions.",
                                            "type": "AccountAccessForbidden",
                                            "status_code": 403
                                        },
                                        "summary": "Account Access Forbidden",
                                        "description": "Couldn't update account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    },
                                    "AccountNotFoundError": {
                                        "value": {
                                            "summary": "Account ID $ACC_ID not found",
                                            "detail": "Please check whether you specified a valid Account ID",
                                            "status_code": 404
                                        },
                                        "summary": "Account not found error",
                                        "description": "Account not found"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "AccountSuspendedError": {
                                        "value": {
                                            "summary": "Account suspended",
                                            "detail": "This account or its requisition was suspended due to numerous errors that occurred while accessing it.",
                                            "status_code": 409
                                        },
                                        "summary": "Account suspended error",
                                        "description": "Account or its requisition suspended"
                                    },
                                    "AccountStateError": {
                                        "value": {
                                            "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                            "created": "2022-12-31T00:31:01.267835Z",
                                            "last_accessed": "2022-12-31T00:31:01.267841Z",
                                            "iban": "string",
                                            "aspsp_identifier": "string",
                                            "status": "ERROR"
                                        },
                                        "summary": "Account state error",
                                        "description": "Account state does not support this operation"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "RateLimitError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Daily request limit set by the Institution has been exceeded.",
                                            "type": "RateLimitError",
                                            "status_code": 429
                                        },
                                        "summary": "Rate Limit Error",
                                        "description": "Couldn't update account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "UnknownRequestError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Request to Institution returned an error",
                                            "type": "UnknownRequestError",
                                            "status_code": 500
                                        },
                                        "summary": "Unknown Request Error",
                                        "description": "Couldn't update account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "ServiceError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Institution service unavailable",
                                            "type": "ServiceError",
                                            "status_code": 503
                                        },
                                        "summary": "Service Error",
                                        "description": "Couldn't update account balances"
                                    },
                                    "ConnectionError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Couldn't connect to Institution",
                                            "type": "ConnectionError",
                                            "status_code": 503
                                        },
                                        "summary": "Connection Error",
                                        "description": "Couldn't update account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/accounts/{id}/details/": {
            "get": {
                "operationId": "accounts_details_retrieve",
                "description": "Access account details.\n\nAccount details will be returned in Berlin Group PSD2 format.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A UUID string identifying this account."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "RetrieveAccountDetails": {
                                        "value": {
                                            "account": {
                                                "resourceId": "string",
                                                "iban": "string",
                                                "currency": "string",
                                                "ownerName": "string",
                                                "name": "string",
                                                "product": "string",
                                                "cashAccountType": "string"
                                            }
                                        },
                                        "summary": "Sample account details",
                                        "description": "Sample account details"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid Account ID",
                                            "detail": "$ACCOUNT_ID is not a valid Account UUID. ",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid Account ID"
                                    },
                                    "DateRangeError": {
                                        "value": {
                                            "summary": "Incorrect date range",
                                            "detail": "Starting date '2023-01-10' is greater than end date '2022-12-31'. When specifying date range, starting date must precede the end date",
                                            "status_code": 400
                                        },
                                        "summary": "Date range error",
                                        "description": "Incorrect date range in query parameters"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    },
                                    "AccessExpiredError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Access has expired or it has been revoked. To restore access reconnect the account.",
                                            "type": "AccessExpiredError",
                                            "status_code": 401
                                        },
                                        "summary": "Access Expired Error",
                                        "description": "Couldn't update account balances"
                                    },
                                    "AccountInactiveError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Account has been deactivated or it no longer exists.",
                                            "type": "AccountInactiveError",
                                            "status_code": 401
                                        },
                                        "summary": "Account Inactive Error",
                                        "description": "Couldn't update account balances"
                                    },
                                    "FailedAuthentication": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "SSN Verification has failed",
                                            "type": "FailedAuthentication",
                                            "status_code": 401
                                        },
                                        "summary": "Failed Authentication",
                                        "description": "Couldn't update account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    },
                                    "AccountEUAScopeError": {
                                        "value": {
                                            "summary": "End User Agreement (EUA) access scope error",
                                            "detail": "EUA doesn't allow access to account balances. Check EUA access scope. Or create new EUA with correct access scope",
                                            "status_code": 403
                                        },
                                        "summary": "Account EUA scope error",
                                        "description": "EUA doesn't allow access to account balances."
                                    },
                                    "AccountValidEUAError": {
                                        "value": {
                                            "summary": "No valid End User Agreement",
                                            "detail": "Account exists but there is no valid End User Agreement permitting you to access it",
                                            "status_code": 403
                                        },
                                        "summary": "Account valid EUA error",
                                        "description": "Account has no valid End User Agreement"
                                    },
                                    "AccountAccessForbidden": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Access to account is forbidden. The user might not have the necessary permissions.",
                                            "type": "AccountAccessForbidden",
                                            "status_code": 403
                                        },
                                        "summary": "Account Access Forbidden",
                                        "description": "Couldn't update account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    },
                                    "AccountNotFoundError": {
                                        "value": {
                                            "summary": "Account ID $ACC_ID not found",
                                            "detail": "Please check whether you specified a valid Account ID",
                                            "status_code": 404
                                        },
                                        "summary": "Account not found error",
                                        "description": "Account not found"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "AccountSuspendedError": {
                                        "value": {
                                            "summary": "Account suspended",
                                            "detail": "This account or its requisition was suspended due to numerous errors that occurred while accessing it.",
                                            "status_code": 409
                                        },
                                        "summary": "Account suspended error",
                                        "description": "Account or its requisition suspended"
                                    },
                                    "AccountStateError": {
                                        "value": {
                                            "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                            "created": "2022-12-31T00:31:01.267835Z",
                                            "last_accessed": "2022-12-31T00:31:01.267841Z",
                                            "iban": "string",
                                            "aspsp_identifier": "string",
                                            "status": "ERROR"
                                        },
                                        "summary": "Account state error",
                                        "description": "Account state does not support this operation"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "RateLimitError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Daily request limit set by the Institution has been exceeded.",
                                            "type": "RateLimitError",
                                            "status_code": 429
                                        },
                                        "summary": "Rate Limit Error",
                                        "description": "Couldn't update account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "UnknownRequestError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Request to Institution returned an error",
                                            "type": "UnknownRequestError",
                                            "status_code": 500
                                        },
                                        "summary": "Unknown Request Error",
                                        "description": "Couldn't update account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "ServiceError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Institution service unavailable",
                                            "type": "ServiceError",
                                            "status_code": 503
                                        },
                                        "summary": "Service Error",
                                        "description": "Couldn't update account balances"
                                    },
                                    "ConnectionError": {
                                        "value": {
                                            "summary": "Couldn't update account balances",
                                            "detail": "Couldn't connect to Institution",
                                            "type": "ConnectionError",
                                            "status_code": 503
                                        },
                                        "summary": "Connection Error",
                                        "description": "Couldn't update account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/accounts/{id}/transactions/": {
            "get": {
                "operationId": "accounts_transactions_retrieve",
                "description": "Access account transactions.\n\nTransactions will be returned in Berlin Group PSD2 format.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "date_from",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "examples": {
                            "2022-10-02": {
                                "value": "2022-10-02",
                                "summary": "2022-10-02",
                                "description": "ISO 8601 format date"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "date_to",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "examples": {
                            "2022-12-31": {
                                "value": "2022-12-31",
                                "summary": "2022-12-31",
                                "description": "ISO 8601 format date"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A UUID string identifying this account."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "RetrieveAccountTransactions": {
                                        "value": {
                                            "transactions": {
                                                "booked": [
                                                    {
                                                        "transactionId": "string",
                                                        "debtorName": "string",
                                                        "debtorAccount": {
                                                            "iban": "string"
                                                        },
                                                        "transactionAmount": {
                                                            "currency": "string",
                                                            "amount": "328.18"
                                                        },
                                                        "bankTransactionCode": "string",
                                                        "bookingDate": "date",
                                                        "valueDate": "date",
                                                        "remittanceInformationUnstructured": "string"
                                                    },
                                                    {
                                                        "transactionId": "string",
                                                        "transactionAmount": {
                                                            "currency": "string",
                                                            "amount": "947.26"
                                                        },
                                                        "bankTransactionCode": "string",
                                                        "bookingDate": "date",
                                                        "valueDate": "date",
                                                        "remittanceInformationUnstructured": "string"
                                                    }
                                                ],
                                                "pending": [
                                                    {
                                                        "transactionAmount": {
                                                            "currency": "string",
                                                            "amount": "float"
                                                        },
                                                        "valueDate": "date",
                                                        "remittanceInformationUnstructured": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "summary": "Account transactions",
                                        "description": "Sample account balances"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid Account ID",
                                            "detail": "$ACCOUNT_ID is not a valid Account UUID. ",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid Account ID"
                                    },
                                    "DateRangeError": {
                                        "value": {
                                            "summary": "Incorrect date range",
                                            "detail": "Starting date '2023-01-10' is greater than end date '2022-12-31'. When specifying date range, starting date must precede the end date",
                                            "status_code": 400
                                        },
                                        "summary": "Date range error",
                                        "description": "Incorrect date range in query parameters"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    },
                                    "AccessExpiredError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Access has expired or it has been revoked. To restore access reconnect the account.",
                                            "type": "AccessExpiredError",
                                            "status_code": 401
                                        },
                                        "summary": "Access Expired Error",
                                        "description": "Couldn't update account transactions"
                                    },
                                    "AccountInactiveError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Account has been deactivated or it no longer exists.",
                                            "type": "AccountInactiveError",
                                            "status_code": 401
                                        },
                                        "summary": "Account Inactive Error",
                                        "description": "Couldn't update account transactions"
                                    },
                                    "FailedAuthentication": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "SSN Verification has failed",
                                            "type": "FailedAuthentication",
                                            "status_code": 401
                                        },
                                        "summary": "Failed Authentication",
                                        "description": "Couldn't update account transactions"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    },
                                    "AccountEUAScopeError": {
                                        "value": {
                                            "summary": "End User Agreement (EUA) access scope error",
                                            "detail": "EUA doesn't allow access to account transactions. Check EUA access scope. Or create new EUA with correct access scope",
                                            "status_code": 403
                                        },
                                        "summary": "Account EUA scope error",
                                        "description": "EUA doesn't allow access to account transactions."
                                    },
                                    "AccountValidEUAError": {
                                        "value": {
                                            "summary": "No valid End User Agreement",
                                            "detail": "Account exists but there is no valid End User Agreement permitting you to access it",
                                            "status_code": 403
                                        },
                                        "summary": "Account valid EUA error",
                                        "description": "Account has no valid End User Agreement"
                                    },
                                    "AccountAccessForbidden": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Access to account is forbidden. The user might not have the necessary permissions.",
                                            "type": "AccountAccessForbidden",
                                            "status_code": 403
                                        },
                                        "summary": "Account Access Forbidden",
                                        "description": "Couldn't update account transactions"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    },
                                    "AccountNotFoundError": {
                                        "value": {
                                            "summary": "Account ID $ACC_ID not found",
                                            "detail": "Please check whether you specified a valid Account ID",
                                            "status_code": 404
                                        },
                                        "summary": "Account not found error",
                                        "description": "Account not found"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "AccountSuspendedError": {
                                        "value": {
                                            "summary": "Account suspended",
                                            "detail": "This account or its requisition was suspended due to numerous errors that occurred while accessing it.",
                                            "status_code": 409
                                        },
                                        "summary": "Account suspended error",
                                        "description": "Account or its requisition suspended"
                                    },
                                    "AccountStateError": {
                                        "value": {
                                            "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                            "created": "2022-12-31T00:31:01.267835Z",
                                            "last_accessed": "2022-12-31T00:31:01.267841Z",
                                            "iban": "string",
                                            "aspsp_identifier": "string",
                                            "status": "ERROR"
                                        },
                                        "summary": "Account state error",
                                        "description": "Account state does not support this operation"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "RateLimitError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Daily request limit set by the Institution has been exceeded.",
                                            "type": "RateLimitError",
                                            "status_code": 429
                                        },
                                        "summary": "Rate Limit Error",
                                        "description": "Couldn't update account transactions"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "UnknownRequestError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Request to Institution returned an error",
                                            "type": "UnknownRequestError",
                                            "status_code": 500
                                        },
                                        "summary": "Unknown Request Error",
                                        "description": "Couldn't update account transactions"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "ServiceError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Institution service unavailable",
                                            "type": "ServiceError",
                                            "status_code": 503
                                        },
                                        "summary": "Service Error",
                                        "description": "Couldn't update account transactions"
                                    },
                                    "ConnectionError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Couldn't connect to Institution",
                                            "type": "ConnectionError",
                                            "status_code": 503
                                        },
                                        "summary": "Connection Error",
                                        "description": "Couldn't update account transactions"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/accounts/premium/{id}/transactions/": {
            "get": {
                "operationId": "retrieve account transactions v2",
                "description": "Access account premium transactions.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "country",
                        "schema": {
                            "type": "string"
                        },
                        "description": "ISO 3166 two-character country code",
                        "examples": {
                            "Austria": {
                                "value": "AT",
                                "summary": "Austria",
                                "description": "ISO 3166 two-character code for Austria"
                            },
                            "Belgium": {
                                "value": "BE",
                                "summary": "Belgium",
                                "description": "ISO 3166 two-character code for Belgium"
                            },
                            "Bulgaria": {
                                "value": "BG",
                                "summary": "Bulgaria",
                                "description": "ISO 3166 two-character code for Bulgaria"
                            },
                            "Croatia": {
                                "value": "HR",
                                "summary": "Croatia",
                                "description": "ISO 3166 two-character code for Croatia"
                            },
                            "Cyprus": {
                                "value": "CY",
                                "summary": "Cyprus",
                                "description": "ISO 3166 two-character code for Cyprus"
                            },
                            "Czechia": {
                                "value": "CZ",
                                "summary": "Czechia",
                                "description": "ISO 3166 two-character code for Czechia"
                            },
                            "Denmark": {
                                "value": "DK",
                                "summary": "Denmark",
                                "description": "ISO 3166 two-character code for Denmark"
                            },
                            "Estonia": {
                                "value": "EE",
                                "summary": "Estonia",
                                "description": "ISO 3166 two-character code for Estonia"
                            },
                            "Finland": {
                                "value": "FI",
                                "summary": "Finland",
                                "description": "ISO 3166 two-character code for Finland"
                            },
                            "France": {
                                "value": "FR",
                                "summary": "France",
                                "description": "ISO 3166 two-character code for France"
                            },
                            "Germany": {
                                "value": "DE",
                                "summary": "Germany",
                                "description": "ISO 3166 two-character code for Germany"
                            },
                            "Greece": {
                                "value": "GR",
                                "summary": "Greece",
                                "description": "ISO 3166 two-character code for Greece"
                            },
                            "Hungary": {
                                "value": "HU",
                                "summary": "Hungary",
                                "description": "ISO 3166 two-character code for Hungary"
                            },
                            "Iceland": {
                                "value": "IS",
                                "summary": "Iceland",
                                "description": "ISO 3166 two-character code for Iceland"
                            },
                            "Ireland": {
                                "value": "IE",
                                "summary": "Ireland",
                                "description": "ISO 3166 two-character code for Ireland"
                            },
                            "Italy": {
                                "value": "IT",
                                "summary": "Italy",
                                "description": "ISO 3166 two-character code for Italy"
                            },
                            "Latvia": {
                                "value": "LV",
                                "summary": "Latvia",
                                "description": "ISO 3166 two-character code for Latvia"
                            },
                            "Liechtenstein": {
                                "value": "LI",
                                "summary": "Liechtenstein",
                                "description": "ISO 3166 two-character code for Liechtenstein"
                            },
                            "Lithuania": {
                                "value": "LT",
                                "summary": "Lithuania",
                                "description": "ISO 3166 two-character code for Lithuania"
                            },
                            "Luxembourg": {
                                "value": "LU",
                                "summary": "Luxembourg",
                                "description": "ISO 3166 two-character code for Luxembourg"
                            },
                            "Malta": {
                                "value": "MT",
                                "summary": "Malta",
                                "description": "ISO 3166 two-character code for Malta"
                            },
                            "Netherlands": {
                                "value": "NL",
                                "summary": "Netherlands",
                                "description": "ISO 3166 two-character code for Netherlands"
                            },
                            "Norway": {
                                "value": "NO",
                                "summary": "Norway",
                                "description": "ISO 3166 two-character code for Norway"
                            },
                            "Poland": {
                                "value": "PL",
                                "summary": "Poland",
                                "description": "ISO 3166 two-character code for Poland"
                            },
                            "Portugal": {
                                "value": "PT",
                                "summary": "Portugal",
                                "description": "ISO 3166 two-character code for Portugal"
                            },
                            "Romania": {
                                "value": "RO",
                                "summary": "Romania",
                                "description": "ISO 3166 two-character code for Romania"
                            },
                            "Slovakia": {
                                "value": "SK",
                                "summary": "Slovakia",
                                "description": "ISO 3166 two-character code for Slovakia"
                            },
                            "Slovenia": {
                                "value": "SI",
                                "summary": "Slovenia",
                                "description": "ISO 3166 two-character code for Slovenia"
                            },
                            "Spain": {
                                "value": "ES",
                                "summary": "Spain",
                                "description": "ISO 3166 two-character code for Spain"
                            },
                            "Sweden": {
                                "value": "SE",
                                "summary": "Sweden",
                                "description": "ISO 3166 two-character code for Sweden"
                            },
                            "UnitedKingdom": {
                                "value": "GB",
                                "summary": "United Kingdom",
                                "description": "ISO 3166 two-character code for United Kingdom"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "date_from",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "examples": {
                            "2022-10-02": {
                                "value": "2022-10-02",
                                "summary": "2022-10-02",
                                "description": "ISO 8601 format date"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "date_to",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "examples": {
                            "2022-12-31": {
                                "value": "2022-12-31",
                                "summary": "2022-12-31",
                                "description": "ISO 8601 format date"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A UUID string identifying this account."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "premium"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid Account ID",
                                            "detail": "$ACCOUNT_ID is not a valid Account UUID. ",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid Account ID"
                                    },
                                    "DateRangeError": {
                                        "value": {
                                            "summary": "Incorrect date range",
                                            "detail": "Starting date '2023-01-10' is greater than end date '2022-12-31'. When specifying date range, starting date must precede the end date",
                                            "status_code": 400
                                        },
                                        "summary": "Date range error",
                                        "description": "Incorrect date range in query parameters"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    },
                                    "AccessExpiredError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Access has expired or it has been revoked. To restore access reconnect the account.",
                                            "type": "AccessExpiredError",
                                            "status_code": 401
                                        },
                                        "summary": "Access Expired Error",
                                        "description": "Couldn't update account transactions"
                                    },
                                    "AccountInactiveError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Account has been deactivated or it no longer exists.",
                                            "type": "AccountInactiveError",
                                            "status_code": 401
                                        },
                                        "summary": "Account Inactive Error",
                                        "description": "Couldn't update account transactions"
                                    },
                                    "FailedAuthentication": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "SSN Verification has failed",
                                            "type": "FailedAuthentication",
                                            "status_code": 401
                                        },
                                        "summary": "Failed Authentication",
                                        "description": "Couldn't update account transactions"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    },
                                    "AccountEUAScopeError": {
                                        "value": {
                                            "summary": "End User Agreement (EUA) access scope error",
                                            "detail": "EUA doesn't allow access to account transactions. Check EUA access scope. Or create new EUA with correct access scope",
                                            "status_code": 403
                                        },
                                        "summary": "Account EUA scope error",
                                        "description": "EUA doesn't allow access to account transactions."
                                    },
                                    "AccountValidEUAError": {
                                        "value": {
                                            "summary": "No valid End User Agreement",
                                            "detail": "Account exists but there is no valid End User Agreement permitting you to access it",
                                            "status_code": 403
                                        },
                                        "summary": "Account valid EUA error",
                                        "description": "Account has no valid End User Agreement"
                                    },
                                    "AccountAccessForbidden": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Access to account is forbidden. The user might not have the necessary permissions.",
                                            "type": "AccountAccessForbidden",
                                            "status_code": 403
                                        },
                                        "summary": "Account Access Forbidden",
                                        "description": "Couldn't update account transactions"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    },
                                    "AccountNotFoundError": {
                                        "value": {
                                            "summary": "Account ID $ACC_ID not found",
                                            "detail": "Please check whether you specified a valid Account ID",
                                            "status_code": 404
                                        },
                                        "summary": "Account not found error",
                                        "description": "Account not found"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "AccountSuspendedError": {
                                        "value": {
                                            "summary": "Account suspended",
                                            "detail": "This account or its requisition was suspended due to numerous errors that occurred while accessing it.",
                                            "status_code": 409
                                        },
                                        "summary": "Account suspended error",
                                        "description": "Account or its requisition suspended"
                                    },
                                    "AccountStateError": {
                                        "value": {
                                            "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                            "created": "2022-12-31T00:31:01.267835Z",
                                            "last_accessed": "2022-12-31T00:31:01.267841Z",
                                            "iban": "string",
                                            "aspsp_identifier": "string",
                                            "status": "ERROR"
                                        },
                                        "summary": "Account state error",
                                        "description": "Account state does not support this operation"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "RateLimitError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Daily request limit set by the Institution has been exceeded.",
                                            "type": "RateLimitError",
                                            "status_code": 429
                                        },
                                        "summary": "Rate Limit Error",
                                        "description": "Couldn't update account transactions"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "UnknownRequestError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Request to Institution returned an error",
                                            "type": "UnknownRequestError",
                                            "status_code": 500
                                        },
                                        "summary": "Unknown Request Error",
                                        "description": "Couldn't update account transactions"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "ServiceError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Institution service unavailable",
                                            "type": "ServiceError",
                                            "status_code": 503
                                        },
                                        "summary": "Service Error",
                                        "description": "Couldn't update account transactions"
                                    },
                                    "ConnectionError": {
                                        "value": {
                                            "summary": "Couldn't update account transactions",
                                            "detail": "Couldn't connect to Institution",
                                            "type": "ConnectionError",
                                            "status_code": 503
                                        },
                                        "summary": "Connection Error",
                                        "description": "Couldn't update account transactions"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/agreements/enduser/": {
            "get": {
                "operationId": "retrieve all EUAs for an end user v2",
                "description": "Retrieve all end user agreements belonging to the company",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "agreements"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEndUserAgreementList"
                                }
                            }
                        },
                        "description": "Retrieve all end user agreements"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create EUA v2",
                "description": "Create an end user agreement",
                "tags": [
                    "agreements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserAgreementRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserAgreementRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserAgreementRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndUserAgreement"
                                }
                            }
                        },
                        "description": "Create enduser agreement"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InstitutionFieldErrors": {
                                        "value": {
                                            "institution_id": {
                                                "summary": "Unknown Institution ID $INSTITUTION_ID",
                                                "detail": "Get Institution IDs from /institutions/?country={$COUNTRY_CODE}"
                                            },
                                            "status_code": 400
                                        },
                                        "summary": "Institution field errors",
                                        "description": "Errors related to 'institution' field."
                                    },
                                    "AccessScopeFieldErrors": {
                                        "value": {
                                            "access_scope": [
                                                {
                                                    "summary": "Unknown value '$SCOPE' in access_scope",
                                                    "detail": "Choose one or several from ['balances', 'details', 'transactions']"
                                                },
                                                {
                                                    "summary": "Institution access scope dependencies error",
                                                    "detail": "For this institution the following scopes are required together: ['balances', 'details']"
                                                },
                                                {
                                                    "summary": "Institution access scope dependencies error",
                                                    "detail": "The following scopes are mandatory for this institution: ['transactions']"
                                                }
                                            ],
                                            "status_code": 400
                                        },
                                        "summary": "Access scope field errors",
                                        "description": "Errors related to 'access_scope' field."
                                    },
                                    "MaxHistoricalDaysFieldErrors": {
                                        "value": {
                                            "max_historical_days": [
                                                {
                                                    "summary": "Incorrect max_historical_days",
                                                    "detail": "max_historical_days must be > 0 and <= N26_NTSBDEB1 transaction_total_days (730)"
                                                }
                                            ],
                                            "status_code": 400
                                        },
                                        "summary": "Max historical days field errors",
                                        "description": "Errors related to 'max_historical_days' field."
                                    },
                                    "AccessValidForDaysFieldErrors": {
                                        "value": {
                                            "access_valid_for_days": [
                                                {
                                                    "summary": "Incorrect access_valid_for_days",
                                                    "detail": "access_valid_for_days must be > 0 and <= 90"
                                                }
                                            ],
                                            "status_code": 400
                                        },
                                        "summary": "Access valid for days field errors",
                                        "description": "Errors related to 'access_valid_for_days' field."
                                    },
                                    "AgreementFieldErrors": {
                                        "value": {
                                            "agreement": {
                                                "summary": "Incorrect Institution ID $INSTITUTION_ID",
                                                "detail": "Provided Institution ID: '$INSTITUTION_ID' for requisition does not match EUA institution ID '$EUA_INSTITUTION_ID'. Please provide correct institution ID: '$EUA_INSTITUTION_ID'"
                                            },
                                            "status_code": 400
                                        },
                                        "summary": "Agreement field errors",
                                        "description": "Errors related to 'agreement' field."
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/agreements/enduser/{id}/": {
            "get": {
                "operationId": "retrieve EUA by id v2",
                "description": "Retrieve end user agreement by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this end user agreement.",
                        "required": true
                    }
                ],
                "tags": [
                    "agreements"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndUserAgreement"
                                }
                            }
                        },
                        "description": "Retrieve end user agreement by ID"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid ID",
                                            "detail": "272785d5-de45-4efb-aa1a-f8157ffa94 is not a valid UUID.",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid ID"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete EUA by id v2",
                "description": "Delete an end user agreement",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this end user agreement.",
                        "required": true
                    }
                ],
                "tags": [
                    "agreements"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "EuaDeleted": {
                                        "value": {
                                            "summary": "End User Agreement deleted",
                                            "detail": "End User Agreement '$EUA_ID' deleted"
                                        },
                                        "summary": "Eua Deleted",
                                        "description": "EUA is deleted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "CannotDeleteEUA": {
                                        "value": {
                                            "summary": "Cannot delete End User Agreement",
                                            "detail": "Cannot delete accepted End User Agreement: $EUA_ID. Only non accepted agreements can be deleted",
                                            "status_code": 400
                                        },
                                        "summary": "Cannot delete EUA",
                                        "description": "Cannot delete End User Agreement"
                                    },
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid ID",
                                            "detail": "272785d5-de45-4efb-aa1a-f8157ffa94 is not a valid UUID.",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid ID"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/agreements/enduser/{id}/accept/": {
            "put": {
                "operationId": "accept EUA",
                "description": "Accept an end-user agreement via the API",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this end user agreement.",
                        "required": true
                    }
                ],
                "tags": [
                    "agreements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnduserAcceptanceDetailsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EnduserAcceptanceDetailsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EnduserAcceptanceDetailsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndUserAgreement"
                                }
                            }
                        },
                        "description": "EUA"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid ID",
                                            "detail": "272785d5-de45-4efb-aa1a-f8157ffa94 is not a valid UUID.",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid ID"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InsufficientPermissions": {
                                        "value": {
                                            "summary": "Insufficient permissions",
                                            "detail": "Your company doesn't have permission to accept EUA. You'll have to use our default form for this action.",
                                            "status_code": 403
                                        },
                                        "summary": "Insufficient permissions",
                                        "description": "Company doesn't have permission to accept EUA"
                                    },
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "EUAAccepted": {
                                        "value": {
                                            "summary": "EUA cannot be accepted more than once",
                                            "detail": "End User Agreements cannot be accepted more than once",
                                            "status_code": 405
                                        },
                                        "summary": "EUA accepted",
                                        "description": "End User Agreements cannot be accepted more than once"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/institutions/": {
            "get": {
                "operationId": "retrieve all supported Institutions in a given country",
                "description": "List all available institutions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "country",
                        "schema": {
                            "type": "string"
                        },
                        "description": "ISO 3166 two-character country code",
                        "examples": {
                            "Austria": {
                                "value": "AT",
                                "summary": "Austria",
                                "description": "ISO 3166 two-character code for Austria"
                            },
                            "Belgium": {
                                "value": "BE",
                                "summary": "Belgium",
                                "description": "ISO 3166 two-character code for Belgium"
                            },
                            "Bulgaria": {
                                "value": "BG",
                                "summary": "Bulgaria",
                                "description": "ISO 3166 two-character code for Bulgaria"
                            },
                            "Croatia": {
                                "value": "HR",
                                "summary": "Croatia",
                                "description": "ISO 3166 two-character code for Croatia"
                            },
                            "Cyprus": {
                                "value": "CY",
                                "summary": "Cyprus",
                                "description": "ISO 3166 two-character code for Cyprus"
                            },
                            "Czechia": {
                                "value": "CZ",
                                "summary": "Czechia",
                                "description": "ISO 3166 two-character code for Czechia"
                            },
                            "Denmark": {
                                "value": "DK",
                                "summary": "Denmark",
                                "description": "ISO 3166 two-character code for Denmark"
                            },
                            "Estonia": {
                                "value": "EE",
                                "summary": "Estonia",
                                "description": "ISO 3166 two-character code for Estonia"
                            },
                            "Finland": {
                                "value": "FI",
                                "summary": "Finland",
                                "description": "ISO 3166 two-character code for Finland"
                            },
                            "France": {
                                "value": "FR",
                                "summary": "France",
                                "description": "ISO 3166 two-character code for France"
                            },
                            "Germany": {
                                "value": "DE",
                                "summary": "Germany",
                                "description": "ISO 3166 two-character code for Germany"
                            },
                            "Greece": {
                                "value": "GR",
                                "summary": "Greece",
                                "description": "ISO 3166 two-character code for Greece"
                            },
                            "Hungary": {
                                "value": "HU",
                                "summary": "Hungary",
                                "description": "ISO 3166 two-character code for Hungary"
                            },
                            "Iceland": {
                                "value": "IS",
                                "summary": "Iceland",
                                "description": "ISO 3166 two-character code for Iceland"
                            },
                            "Ireland": {
                                "value": "IE",
                                "summary": "Ireland",
                                "description": "ISO 3166 two-character code for Ireland"
                            },
                            "Italy": {
                                "value": "IT",
                                "summary": "Italy",
                                "description": "ISO 3166 two-character code for Italy"
                            },
                            "Latvia": {
                                "value": "LV",
                                "summary": "Latvia",
                                "description": "ISO 3166 two-character code for Latvia"
                            },
                            "Liechtenstein": {
                                "value": "LI",
                                "summary": "Liechtenstein",
                                "description": "ISO 3166 two-character code for Liechtenstein"
                            },
                            "Lithuania": {
                                "value": "LT",
                                "summary": "Lithuania",
                                "description": "ISO 3166 two-character code for Lithuania"
                            },
                            "Luxembourg": {
                                "value": "LU",
                                "summary": "Luxembourg",
                                "description": "ISO 3166 two-character code for Luxembourg"
                            },
                            "Malta": {
                                "value": "MT",
                                "summary": "Malta",
                                "description": "ISO 3166 two-character code for Malta"
                            },
                            "Netherlands": {
                                "value": "NL",
                                "summary": "Netherlands",
                                "description": "ISO 3166 two-character code for Netherlands"
                            },
                            "Norway": {
                                "value": "NO",
                                "summary": "Norway",
                                "description": "ISO 3166 two-character code for Norway"
                            },
                            "Poland": {
                                "value": "PL",
                                "summary": "Poland",
                                "description": "ISO 3166 two-character code for Poland"
                            },
                            "Portugal": {
                                "value": "PT",
                                "summary": "Portugal",
                                "description": "ISO 3166 two-character code for Portugal"
                            },
                            "Romania": {
                                "value": "RO",
                                "summary": "Romania",
                                "description": "ISO 3166 two-character code for Romania"
                            },
                            "Slovakia": {
                                "value": "SK",
                                "summary": "Slovakia",
                                "description": "ISO 3166 two-character code for Slovakia"
                            },
                            "Slovenia": {
                                "value": "SI",
                                "summary": "Slovenia",
                                "description": "ISO 3166 two-character code for Slovenia"
                            },
                            "Spain": {
                                "value": "ES",
                                "summary": "Spain",
                                "description": "ISO 3166 two-character code for Spain"
                            },
                            "Sweden": {
                                "value": "SE",
                                "summary": "Sweden",
                                "description": "ISO 3166 two-character code for Sweden"
                            },
                            "UnitedKingdom": {
                                "value": "GB",
                                "summary": "United Kingdom",
                                "description": "ISO 3166 two-character code for United Kingdom"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "payments_enabled",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Boolean value, indicating if payments are enabled",
                        "examples": {
                            "PaymentsEnabled": {
                                "value": "false",
                                "summary": "payments_enabled",
                                "description": "Boolean value representing whether                            payments are enabled"
                            }
                        }
                    }
                ],
                "tags": [
                    "institutions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Aspsp"
                                    }
                                },
                                "examples": {
                                    "SupportedInstitutions": {
                                        "value": [
                                            {
                                                "id": "N26_NTSBDEB1",
                                                "name": "N26 Bank",
                                                "bic": "NTSBDEB1",
                                                "transaction_total_days": "90",
                                                "countries": [
                                                    "GB",
                                                    "NO",
                                                    "SE",
                                                    "FI",
                                                    "DK",
                                                    "EE",
                                                    "LV",
                                                    "LT",
                                                    "NL",
                                                    "CZ",
                                                    "ES",
                                                    "PL",
                                                    "BE",
                                                    "DE",
                                                    "AT",
                                                    "BG",
                                                    "HR",
                                                    "CY",
                                                    "FR",
                                                    "GR",
                                                    "HU",
                                                    "IS",
                                                    "IE",
                                                    "IT",
                                                    "LI",
                                                    "LU",
                                                    "MT",
                                                    "PT",
                                                    "RO",
                                                    "SK",
                                                    "SI"
                                                ],
                                                "logo": "https://cdn.nordigen.com/ais/N26_SANDBOX_NTSBDEB1.png"
                                            },
                                            {
                                                "id": "ABNAMRO_FTSBDEFAXXX",
                                                "name": "ABN AMRO Bank Commercial",
                                                "bic": "FTSBDEFAXXX",
                                                "transaction_total_days": "558",
                                                "countries": [
                                                    "DE"
                                                ],
                                                "logo": "https://cdn.nordigen.com/ais/ABNAMRO_FTSBDEFAXXX.png"
                                            }
                                        ],
                                        "summary": "Supported Institutions",
                                        "description": "some of supported Institutions"
                                    }
                                }
                            }
                        },
                        "description": "list of supported Institutions in the country"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotAValidChoice": {
                                        "value": {
                                            "summary": "Invalid country choice.",
                                            "country": [
                                                "GBA is not a valid choice."
                                            ],
                                            "status_code": 400
                                        },
                                        "summary": "Not a valid choice",
                                        "description": "Provided country is not valid"
                                    },
                                    "UnknownFields": {
                                        "value": {
                                            "summary": "Unknown fields",
                                            "detail": "Unknown fields {${FIELD}} in {${LOCATION}}",
                                            "status_code": 400
                                        },
                                        "summary": "Unknown Fields",
                                        "description": "Unknown Fields"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/institutions/{id}/": {
            "get": {
                "operationId": "retrieve institution",
                "description": "Get details about a specific Institution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "examples": {
                            "N26": {
                                "value": "N26_NTSBDEB1",
                                "summary": "N26",
                                "description": "Nordigen's Institution ID for N26"
                            }
                        }
                    }
                ],
                "tags": [
                    "institutions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aspsp"
                                },
                                "examples": {
                                    "N26Bank": {
                                        "value": {
                                            "id": "N26_NTSBDEB1",
                                            "name": "N26 Bank",
                                            "bic": "NTSBDEB1",
                                            "transaction_total_days": "90",
                                            "countries": [
                                                "GB",
                                                "NO",
                                                "SE",
                                                "FI",
                                                "DK",
                                                "EE",
                                                "LV",
                                                "LT",
                                                "NL",
                                                "CZ",
                                                "ES",
                                                "PL",
                                                "BE",
                                                "DE",
                                                "AT",
                                                "BG",
                                                "HR",
                                                "CY",
                                                "FR",
                                                "GR",
                                                "HU",
                                                "IS",
                                                "IE",
                                                "IT",
                                                "LI",
                                                "LU",
                                                "MT",
                                                "PT",
                                                "RO",
                                                "SK",
                                                "SI"
                                            ],
                                            "logo": "https://cdn.nordigen.com/ais/N26_SANDBOX_NTSBDEB1.png"
                                        },
                                        "summary": "N26 Bank",
                                        "description": "N26 Bank"
                                    },
                                    "ABNAMROBank": {
                                        "value": {
                                            "id": "ABNAMRO_FTSBDEFAXXX",
                                            "name": "ABN AMRO Bank Commercial",
                                            "bic": "FTSBDEFAXXX",
                                            "transaction_total_days": "558",
                                            "countries": [
                                                "DE"
                                            ],
                                            "logo": "https://cdn.nordigen.com/ais/ABNAMRO_FTSBDEFAXXX.png"
                                        },
                                        "summary": "ABN AMRO Bank",
                                        "description": "ABN AMRO Bank"
                                    }
                                }
                            }
                        },
                        "description": "Retrieve institution by id"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/payments/": {
            "get": {
                "operationId": "list payments",
                "description": "Retrieve all payments belonging to the company",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "payments"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPaymentReadList"
                                }
                            }
                        },
                        "description": "List payments"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Unknown fields",
                                    "detail": "Unknown fields {${FIELD}} in {${LOCATION}}",
                                    "status_code": 400
                                },
                                "examples": {
                                    "UnknownFields": {
                                        "value": {
                                            "summary": "Unknown fields",
                                            "detail": "Unknown fields {${FIELD}} in {${LOCATION}}",
                                            "status_code": 400
                                        },
                                        "summary": "Unknown Fields",
                                        "description": "Unknown Fields"
                                    }
                                }
                            }
                        },
                        "description": "Unknown Fields"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Invalid token",
                                    "detail": "Token is invalid or expired",
                                    "status_code": 401
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": "Invalid token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "IP address access denied",
                                    "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                    "status_code": 403
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": "IP Access denied"
                    }
                }
            },
            "post": {
                "operationId": "create payment",
                "description": "Create payment",
                "tags": [
                    "payments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentWriteRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentWriteRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentWriteRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentWrite"
                                }
                            }
                        },
                        "description": "Create payment"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Unknown fields",
                                    "detail": "Unknown fields {${FIELD}} in {${LOCATION}}",
                                    "status_code": 400
                                },
                                "examples": {
                                    "UnknownFields": {
                                        "value": {
                                            "summary": "Unknown fields",
                                            "detail": "Unknown fields {${FIELD}} in {${LOCATION}}",
                                            "status_code": 400
                                        },
                                        "summary": "Unknown Fields",
                                        "description": "Unknown Fields"
                                    }
                                }
                            }
                        },
                        "description": "Unknown Fields"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Invalid token",
                                    "detail": "Token is invalid or expired",
                                    "status_code": 401
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": "Invalid token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "IP address access denied",
                                    "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                    "status_code": 403
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": "IP Access denied"
                    }
                }
            }
        },
        "/api/v2/payments/{id}/": {
            "get": {
                "operationId": "retrieve payment",
                "description": "Retrieve payment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique entry ID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "payments"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRead"
                                }
                            }
                        },
                        "description": "Retrieve payment information"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Invalid ID",
                                    "detail": "272785d5-de45-4efb-aa1a-f8157ffa94 is not a valid UUID.",
                                    "status_code": 400
                                },
                                "examples": {
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid ID",
                                            "detail": "272785d5-de45-4efb-aa1a-f8157ffa94 is not a valid UUID.",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid ID"
                                    }
                                }
                            }
                        },
                        "description": "Invalid ID"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Invalid token",
                                    "detail": "Token is invalid or expired",
                                    "status_code": 401
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": "Invalid token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "IP address access denied",
                                    "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                    "status_code": 403
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": "IP Access denied"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "detail": "Not found.",
                                    "summary": "Not found.",
                                    "status_code": 404
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    }
                                }
                            }
                        },
                        "description": "Not found error"
                    }
                }
            },
            "delete": {
                "operationId": "delete periodic payment",
                "description": "Delete periodic payment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique entry ID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "payments"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Periodic payment deleted",
                                    "detail": "Periodic payment '$PAYMENT_ID' deleted"
                                },
                                "examples": {
                                    "PaymentDeleted": {
                                        "value": {
                                            "summary": "Periodic payment deleted",
                                            "detail": "Periodic payment '$PAYMENT_ID' deleted"
                                        },
                                        "summary": "Payment deleted",
                                        "description": "Periodic payment is deleted"
                                    }
                                }
                            }
                        },
                        "description": "Payment deleted"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Invalid ID",
                                    "detail": "272785d5-de45-4efb-aa1a-f8157ffa94 is not a valid UUID.",
                                    "status_code": 400
                                },
                                "examples": {
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid ID",
                                            "detail": "272785d5-de45-4efb-aa1a-f8157ffa94 is not a valid UUID.",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid ID"
                                    }
                                }
                            }
                        },
                        "description": "Invalid ID"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Invalid token",
                                    "detail": "Token is invalid or expired",
                                    "status_code": 401
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": "Invalid token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "IP address access denied",
                                    "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                    "status_code": 403
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": "IP Access denied"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "detail": "Not found.",
                                    "summary": "Not found.",
                                    "status_code": 404
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    }
                                }
                            }
                        },
                        "description": "Not found error"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Periodic payment cannot be deleted",
                                    "detail": "Periodic payment '$PAYMENT_ID' cannot be deleted at this moment. Please try again later.",
                                    "status_code": 409
                                },
                                "examples": {
                                    "PaymentDeleteError": {
                                        "value": {
                                            "summary": "Periodic payment cannot be deleted",
                                            "detail": "Periodic payment '$PAYMENT_ID' cannot be deleted at this moment. Please try again later.",
                                            "status_code": 409
                                        },
                                        "summary": "Payment delete error",
                                        "description": "Periodic payment cannot be deleted"
                                    }
                                }
                            }
                        },
                        "description": "Payment delete error"
                    }
                }
            }
        },
        "/api/v2/payments/account/": {
            "get": {
                "operationId": "retrieve all payment creditor accounts",
                "description": "Retrieve all payment creditor accounts",
                "tags": [
                    "payments"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CreditorAccount"
                                    }
                                }
                            }
                        },
                        "description": "Retrieve all payment creditor accounts"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Unknown fields",
                                    "detail": "Unknown fields {${FIELD}} in {${LOCATION}}",
                                    "status_code": 400
                                },
                                "examples": {
                                    "UnknownFields": {
                                        "value": {
                                            "summary": "Unknown fields",
                                            "detail": "Unknown fields {${FIELD}} in {${LOCATION}}",
                                            "status_code": 400
                                        },
                                        "summary": "Unknown Fields",
                                        "description": "Unknown Fields"
                                    }
                                }
                            }
                        },
                        "description": "Unknown Fields"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Invalid token",
                                    "detail": "Token is invalid or expired",
                                    "status_code": 401
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": "Invalid token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "IP address access denied",
                                    "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                    "status_code": 403
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": "IP Access denied"
                    }
                }
            }
        },
        "/api/v2/payments/creditors/": {
            "get": {
                "operationId": "payments_creditors_list",
                "description": "API endpoints related to creditor accounts.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "address_country",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "payments"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCreditorAccountList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "payments_creditors_create",
                "description": "API endpoints related to creditor accounts.",
                "tags": [
                    "payments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditorAccountWriteRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditorAccountWriteRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditorAccountWriteRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditorAccountWrite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/payments/creditors/{id}/": {
            "get": {
                "operationId": "payments_creditors_retrieve",
                "description": "API endpoints related to creditor accounts.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique entry ID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "payments"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditorAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "payments_creditors_destroy",
                "description": "API endpoints related to creditor accounts.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique entry ID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "payments"
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/payments/fields/{institution_id}/": {
            "get": {
                "operationId": "list minimum required fields for institution",
                "description": "List minimum required fields for institution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "institution_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "payments"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "single-payment": {
                                        "SCT": {
                                            "institution_id": "<institution_id>",
                                            "payment_product": "SCT",
                                            "creditor_account": "<creditor_account_id>",
                                            "instructed_amount": {
                                                "amount": 10,
                                                "currency": "EUR"
                                            },
                                            "redirect": "<https://example.com>",
                                            "description": "<payment_description>",
                                            "custom_payment_id": "<custom_payment_id>"
                                        }
                                    }
                                },
                                "examples": {
                                    "MinimumRequiredFields": {
                                        "value": {
                                            "single-payment": {
                                                "SCT": {
                                                    "institution_id": "<institution_id>",
                                                    "payment_product": "SCT",
                                                    "creditor_account": "<creditor_account_id>",
                                                    "instructed_amount": {
                                                        "amount": 10,
                                                        "currency": "EUR"
                                                    },
                                                    "redirect": "<https://example.com>",
                                                    "description": "<payment_description>",
                                                    "custom_payment_id": "<custom_payment_id>"
                                                }
                                            }
                                        },
                                        "summary": "Minimum required fields",
                                        "description": "Fields to be used in API request for specific Institution"
                                    }
                                }
                            }
                        },
                        "description": "Minimum required fields"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Unknown fields",
                                    "detail": "Unknown fields {${FIELD}} in {${LOCATION}}",
                                    "status_code": 400
                                },
                                "examples": {
                                    "UnknownFields": {
                                        "value": {
                                            "summary": "Unknown fields",
                                            "detail": "Unknown fields {${FIELD}} in {${LOCATION}}",
                                            "status_code": 400
                                        },
                                        "summary": "Unknown Fields",
                                        "description": "Unknown Fields"
                                    }
                                }
                            }
                        },
                        "description": "Unknown Fields"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "Invalid token",
                                    "detail": "Token is invalid or expired",
                                    "status_code": 401
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": "Invalid token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "summary": "IP address access denied",
                                    "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                    "status_code": 403
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": "IP Access denied"
                    }
                }
            }
        },
        "/api/v2/requisitions/": {
            "get": {
                "operationId": "retrieve all requisitions",
                "description": "Retrieve all requisitions belonging to the company",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "requisitions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRequisitionV2List"
                                }
                            }
                        },
                        "description": "Retrieve all requisitions"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "requisition created",
                "description": "Create a new requisition",
                "tags": [
                    "requisitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequisitionV2Request"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequisitionV2Request"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequisitionV2Request"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpectacularRequisitionV2"
                                }
                            }
                        },
                        "description": "Requisition has been successfully created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "ReferenceFieldErrors": {
                                        "value": {
                                            "reference": {
                                                "summary": "Client reference must be unique",
                                                "detail": "Client reference: $REFERENCE_ID already exists"
                                            },
                                            "status_code": 400
                                        },
                                        "summary": "Reference field errors",
                                        "description": "Errors related to 'reference' field."
                                    },
                                    "UserLanguageFieldErrors": {
                                        "value": {
                                            "user_language": {
                                                "summary": "Provided user_language is invalid or not supported",
                                                "detail": "'$LNG_CODE' is an invalid or unsupported language"
                                            },
                                            "status_code": 400
                                        },
                                        "summary": "User language field errors",
                                        "description": "Errors related to 'user_language' field."
                                    },
                                    "AgreementFieldErrors": {
                                        "value": {
                                            "agreement": [
                                                {
                                                    "summary": "Unknown Institution ID $ASPSP_ID",
                                                    "detail": "Get Institution IDs from /institutions/?country={$COUNTRY_CODE}"
                                                },
                                                {
                                                    "summary": "Invalid EndUserAgreement ID",
                                                    "detail": "$AGREEMENT_ID is not a valid EndUserAgreement UUID.  Please specify valid agreement from /api/agreements/enduser/?={$ENDUSER_ID} or create a new one"
                                                }
                                            ],
                                            "status_code": 400
                                        },
                                        "summary": "Agreement field errors",
                                        "description": "Errors related to 'agreement' field."
                                    },
                                    "RedirectFieldErrors": {
                                        "value": {
                                            "redirect": [
                                                {
                                                    "summary": "Redirect URL is required",
                                                    "detail": "Where an end user will be redirected after finishing authentication in ASPSP"
                                                },
                                                {
                                                    "summary": "Invalid redirect URI",
                                                    "detail": "Redirect URI must have a valid URI structure"
                                                }
                                            ],
                                            "status_code": 400
                                        },
                                        "summary": "Redirect field errors",
                                        "description": "Errors related to 'redirect' field."
                                    },
                                    "SSNFieldErrors": {
                                        "value": {
                                            "ssn": {
                                                "summary": "SSN verification not supported",
                                                "detail": "SSN verification not supported for $INSTITUTION_ID"
                                            },
                                            "status_code": 400
                                        },
                                        "summary": "SSN field errors",
                                        "description": "Errors related to 'ssn' field."
                                    },
                                    "AccountSelectionFieldErrors": {
                                        "value": {
                                            "account_selection": {
                                                "summary": "Account selection not supported",
                                                "detail": "Account selection not supported for $INSTITUTION_ID"
                                            },
                                            "status_code": 400
                                        },
                                        "summary": "Account selection field errors",
                                        "description": "Errors related to 'account_selection' field."
                                    },
                                    "InstitutionFieldErrors": {
                                        "value": {
                                            "institution_id": {
                                                "summary": "Unknown Institution ID $INSTITUTION_ID",
                                                "detail": "Get Institution IDs from /institutions/?country={$COUNTRY_CODE}"
                                            },
                                            "status_code": 400
                                        },
                                        "summary": "Institution field errors",
                                        "description": "Errors related to 'institution' field."
                                    },
                                    "UnknownFields": {
                                        "value": {
                                            "summary": "Unknown fields",
                                            "detail": "Unknown fields {${FIELD}} in {${LOCATION}}",
                                            "status_code": 400
                                        },
                                        "summary": "Unknown Fields",
                                        "description": "Unknown Fields"
                                    },
                                    "FieldsRequired": {
                                        "value": {
                                            "redirect": [
                                                "This field is required."
                                            ],
                                            "institution_id": [
                                                "This field is required."
                                            ],
                                            "status_code": 400
                                        },
                                        "summary": "Fields required",
                                        "description": "Field is required"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "AgreementNotFoundErrors": {
                                        "value": {
                                            "agreement": {
                                                "summary": "ID $AGREEMENT_ID not found",
                                                "detail": "Please check whether you specified a valid ID"
                                            },
                                            "status_code": 404
                                        },
                                        "summary": "Agreement not found errors",
                                        "description": "Errors related to 'agreement' field."
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/requisitions/{id}/": {
            "get": {
                "operationId": "requisition by id",
                "description": "Retrieve a requisition by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this requisition.",
                        "required": true
                    }
                ],
                "tags": [
                    "requisitions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequisitionV2"
                                }
                            }
                        },
                        "description": "Get requisition by ID"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid ID",
                                            "detail": "272785d5-de45-4efb-aa1a-f8157ffa94 is not a valid UUID.",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid ID"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete requisition by id v2",
                "description": "Delete requisition and its end user agreement",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this requisition.",
                        "required": true
                    }
                ],
                "tags": [
                    "requisitions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "RequisitionDeleted": {
                                        "value": {
                                            "summary": "Requisition deleted",
                                            "detail": "Requisition '$REQUISITION_ID' deleted with all its End User Agreements"
                                        },
                                        "summary": "Requisition deleted",
                                        "description": "Requisition is deleted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidID": {
                                        "value": {
                                            "summary": "Invalid ID",
                                            "detail": "272785d5-de45-4efb-aa1a-f8157ffa94 is not a valid UUID.",
                                            "status_code": 400
                                        },
                                        "summary": "Invalid ID",
                                        "description": "Invalid ID"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "NotFoundError": {
                                        "value": {
                                            "detail": "Not found.",
                                            "summary": "Not found.",
                                            "status_code": 404
                                        },
                                        "summary": "Not found error",
                                        "description": "Not found error"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/token/new/": {
            "post": {
                "operationId": "JWT Obtain",
                "description": "Obtain JWT pair",
                "tags": [
                    "token"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JWTObtainPairRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JWTObtainPairRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JWTObtainPairRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpectacularJWTObtain"
                                }
                            }
                        },
                        "description": "Obtain JWT response."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "summary": "Authentication failed",
                                            "detail": "No active account found with the given credentials",
                                            "status_code": 401
                                        },
                                        "summary": "Authentication failed",
                                        "description": "Incorrect secret key or id"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/token/refresh/": {
            "post": {
                "operationId": "JWT Refresh",
                "description": "Refresh access token",
                "tags": [
                    "token"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JWTRefreshRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JWTRefreshRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JWTRefreshRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpectacularJWTRefresh"
                                }
                            }
                        },
                        "description": "Refresh access token."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "InvalidToken": {
                                        "value": {
                                            "summary": "Invalid token",
                                            "detail": "Token is invalid or expired",
                                            "status_code": 401
                                        },
                                        "summary": "Invalid token",
                                        "description": "Token is invalid or expired"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                },
                                "examples": {
                                    "IPAccessDenied": {
                                        "value": {
                                            "summary": "IP address access denied",
                                            "detail": "Your IP $IP_ADDRESS isn't whitelisted to perform this action",
                                            "status_code": 403
                                        },
                                        "summary": "IP Access denied",
                                        "description": "IP address not whitelisted"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountV2": {
                "type": "object",
                "description": "AccountV2Serializer.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The ID of this Account, used to refer to this account in other API calls.",
                        "title": "Account ID"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Created date/time",
                        "description": "The date & time at which the account object was created."
                    },
                    "last_accessed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true,
                        "title": "Last accessed date/time",
                        "description": "The date & time at which the account object was last accessed."
                    },
                    "iban": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Account IBAN"
                    },
                    "institution_id": {
                        "type": "string",
                        "readOnly": true,
                        "title": "ASPSP ID",
                        "description": "The ASPSP associated with this account."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountV2StatusEnum"
                            }
                        ],
                        "readOnly": true,
                        "title": "Account Status",
                        "description": "The processing status of this account."
                    },
                    "owner_name": {
                        "type": "string",
                        "readOnly": true,
                        "title": "Account Owner Name",
                        "description": "The name of the account owner."
                    }
                }
            },
            "AccountV2StatusEnum": {
                "enum": [
                    {
                        "DISCOVERED": "User has successfully authenticated and account is discovered"
                    },
                    {
                        "PROCESSING": "Account is being processed by the Institution"
                    },
                    {
                        "ERROR": "An error was encountered when processing account"
                    },
                    {
                        "EXPIRED": "Access to account has expired as set in End User Agreement"
                    },
                    {
                        "READY": "Account has been successfully processed"
                    },
                    {
                        "SUSPENDED": "Account has been suspended (more than 10 consecutive failed attempts to access the account)"
                    }
                ],
                "type": "string"
            },
            "AddressCountryEnum": {
                "enum": [
                    "AT",
                    "BE",
                    "BG",
                    "HR",
                    "CY",
                    "CZ",
                    "DK",
                    "EE",
                    "FI",
                    "FR",
                    "DE",
                    "GR",
                    "HU",
                    "IS",
                    "IE",
                    "IT",
                    "LV",
                    "LI",
                    "LT",
                    "LU",
                    "MT",
                    "NL",
                    "NO",
                    "PL",
                    "PT",
                    "RO",
                    "SK",
                    "SI",
                    "ES",
                    "SE",
                    "GB"
                ],
                "type": "string"
            },
            "Aspsp": {
                "type": "object",
                "description": "Represents an ASPSP.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "bic": {
                        "type": "string"
                    },
                    "transaction_total_days": {
                        "type": "string",
                        "default": "90"
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logo": {
                        "type": "string"
                    }
                },
                "required": [
                    "countries",
                    "id",
                    "logo",
                    "name"
                ]
            },
            "CountryEnum": {
                "enum": [
                    "AT",
                    "BE",
                    "BG",
                    "HR",
                    "CY",
                    "CZ",
                    "DK",
                    "EE",
                    "FI",
                    "FR",
                    "DE",
                    "GR",
                    "HU",
                    "IS",
                    "IE",
                    "IT",
                    "LV",
                    "LI",
                    "LT",
                    "LU",
                    "MT",
                    "NL",
                    "NO",
                    "PL",
                    "PT",
                    "RO",
                    "SK",
                    "SI",
                    "ES",
                    "SE",
                    "GB"
                ],
                "type": "string"
            },
            "CreditorAccount": {
                "type": "object",
                "description": "Creditor account read serializer.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique entry ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Creditor account name",
                        "maxLength": 70
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeEnum"
                            }
                        ],
                        "default": "IBAN",
                        "description": "Creditor account type"
                    },
                    "account": {
                        "type": "string",
                        "description": "Creditor account identifier",
                        "maxLength": 128
                    },
                    "currency": {
                        "type": "string",
                        "description": "Creditor account currency",
                        "maxLength": 3
                    },
                    "address_country": {
                        "type": "string",
                        "description": "Creditor account address country",
                        "maxLength": 2
                    }
                },
                "required": [
                    "account",
                    "currency",
                    "name"
                ]
            },
            "CreditorAccountWrite": {
                "type": "object",
                "description": "Creditor account write serializer.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique entry ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Creditor account name",
                        "maxLength": 70
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeEnum"
                            }
                        ],
                        "default": "IBAN",
                        "description": "Creditor account type"
                    },
                    "account": {
                        "type": "string",
                        "description": "Creditor account identifier",
                        "maxLength": 128
                    },
                    "currency": {
                        "type": "string",
                        "description": "Creditor account currency",
                        "maxLength": 3
                    },
                    "address_country": {
                        "$ref": "#/components/schemas/AddressCountryEnum"
                    },
                    "institution_id": {
                        "type": "string",
                        "description": "an Institution ID for this CreditorAccount"
                    },
                    "agent": {
                        "type": "string",
                        "description": "Creditor account BICFI Identifier",
                        "maxLength": 128
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "Creditor account agent name",
                        "maxLength": 140
                    },
                    "address_street": {
                        "type": "string",
                        "description": "Creditor account address street",
                        "maxLength": 140
                    },
                    "post_code": {
                        "type": "string",
                        "description": "Creditor account address post code",
                        "maxLength": 30
                    }
                },
                "required": [
                    "account",
                    "currency",
                    "name"
                ]
            },
            "CreditorAccountWriteRequest": {
                "type": "object",
                "description": "Creditor account write serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Creditor account name",
                        "maxLength": 70
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeEnum"
                            }
                        ],
                        "default": "IBAN",
                        "description": "Creditor account type"
                    },
                    "account": {
                        "type": "string",
                        "description": "Creditor account identifier",
                        "maxLength": 128
                    },
                    "currency": {
                        "type": "string",
                        "description": "Creditor account currency",
                        "maxLength": 3
                    },
                    "address_country": {
                        "$ref": "#/components/schemas/AddressCountryEnum"
                    },
                    "institution_id": {
                        "type": "string",
                        "description": "an Institution ID for this CreditorAccount"
                    },
                    "agent": {
                        "type": "string",
                        "description": "Creditor account BICFI Identifier",
                        "maxLength": 128
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "Creditor account agent name",
                        "maxLength": 140
                    },
                    "address_street": {
                        "type": "string",
                        "description": "Creditor account address street",
                        "maxLength": 140
                    },
                    "post_code": {
                        "type": "string",
                        "description": "Creditor account address post code",
                        "maxLength": 30
                    }
                },
                "required": [
                    "account",
                    "currency",
                    "name"
                ]
            },
            "DebtorAccountWrite": {
                "type": "object",
                "description": "Debtor account write serializer.",
                "properties": {
                    "currency": {
                        "type": "string",
                        "description": "Debtor account currency",
                        "maxLength": 3
                    },
                    "account": {
                        "type": "string",
                        "description": "Debtor account account",
                        "maxLength": 128
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeEnum"
                            }
                        ],
                        "default": "IBAN",
                        "description": "Debtor account type"
                    },
                    "name": {
                        "type": "string",
                        "description": "Debtor account name",
                        "maxLength": 70
                    },
                    "address_country": {
                        "type": "string",
                        "description": "Debtor account address country",
                        "maxLength": 2
                    },
                    "post_code": {
                        "type": "string",
                        "description": "Debtor account post code",
                        "maxLength": 30
                    },
                    "address_street": {
                        "type": "string",
                        "description": "Debtor account address street",
                        "maxLength": 140
                    }
                },
                "required": [
                    "account",
                    "name"
                ]
            },
            "DebtorAccountWriteRequest": {
                "type": "object",
                "description": "Debtor account write serializer.",
                "properties": {
                    "currency": {
                        "type": "string",
                        "description": "Debtor account currency",
                        "maxLength": 3
                    },
                    "account": {
                        "type": "string",
                        "description": "Debtor account account",
                        "maxLength": 128
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeEnum"
                            }
                        ],
                        "default": "IBAN",
                        "description": "Debtor account type"
                    },
                    "name": {
                        "type": "string",
                        "description": "Debtor account name",
                        "maxLength": 70
                    },
                    "address_country": {
                        "type": "string",
                        "description": "Debtor account address country",
                        "maxLength": 2
                    },
                    "post_code": {
                        "type": "string",
                        "description": "Debtor account post code",
                        "maxLength": 30
                    },
                    "address_street": {
                        "type": "string",
                        "description": "Debtor account address street",
                        "maxLength": 140
                    }
                },
                "required": [
                    "account",
                    "name"
                ]
            },
            "EndUserAgreement": {
                "type": "object",
                "description": "EndUserAgreement.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "title": "End User Agreement ID",
                        "description": "The ID of this End User Agreement, used to refer to this end user agreement in other API calls."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Created Date",
                        "description": "The date & time at which the end user agreement was created."
                    },
                    "max_historical_days": {
                        "type": "integer",
                        "maximum": 730,
                        "minimum": 1,
                        "default": 90,
                        "title": "Maximum Historical Days",
                        "description": "Maximum number of days of transaction data to retrieve."
                    },
                    "access_valid_for_days": {
                        "type": "integer",
                        "maximum": 90,
                        "minimum": 1,
                        "default": 90,
                        "title": "Access Valid For (Days)",
                        "description": "Number of days from acceptance that the access can be used."
                    },
                    "access_scope": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": [
                                "balances",
                                "details",
                                "transactions"
                            ],
                            "title": "Level of information to access (by default all)"
                        },
                        "default": [
                            "balances",
                            "details",
                            "transactions"
                        ],
                        "title": "Level of information to access (by default all)",
                        "description": "Array containing one or several values of ['balances', 'details', 'transactions']"
                    },
                    "accepted": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true,
                        "title": "Accepted Date",
                        "description": "The date & time at which the end user accepted the agreement."
                    },
                    "institution_id": {
                        "type": "string",
                        "description": "an Institution ID for this EUA"
                    }
                },
                "required": [
                    "institution_id"
                ]
            },
            "EndUserAgreementRequest": {
                "type": "object",
                "description": "EndUserAgreement.",
                "properties": {
                    "max_historical_days": {
                        "type": "integer",
                        "maximum": 730,
                        "minimum": 1,
                        "default": 90,
                        "title": "Maximum Historical Days",
                        "description": "Maximum number of days of transaction data to retrieve."
                    },
                    "access_valid_for_days": {
                        "type": "integer",
                        "maximum": 90,
                        "minimum": 1,
                        "default": 90,
                        "title": "Access Valid For (Days)",
                        "description": "Number of days from acceptance that the access can be used."
                    },
                    "access_scope": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": [
                                "balances",
                                "details",
                                "transactions"
                            ],
                            "title": "Level of information to access (by default all)"
                        },
                        "default": [
                            "balances",
                            "details",
                            "transactions"
                        ],
                        "title": "Level of information to access (by default all)",
                        "description": "Array containing one or several values of ['balances', 'details', 'transactions']"
                    },
                    "institution_id": {
                        "type": "string",
                        "description": "an Institution ID for this EUA"
                    }
                },
                "required": [
                    "institution_id"
                ]
            },
            "EnduserAcceptanceDetailsRequest": {
                "type": "object",
                "description": "Represents end-user details.",
                "properties": {
                    "user_agent": {
                        "type": "string",
                        "title": "user agent string for the end user"
                    },
                    "ip_address": {
                        "type": "string",
                        "title": "end user IP address"
                    }
                },
                "required": [
                    "ip_address",
                    "user_agent"
                ]
            },
            "ExecutionRuleEnum": {
                "enum": [
                    "following",
                    "preceding"
                ],
                "type": "string"
            },
            "FrequencyEnum": {
                "enum": [
                    "Daily",
                    "Weekly",
                    "EveryTwoWeeks",
                    "Monthly",
                    "EveryTwoMonths",
                    "Quarterly",
                    "SemiAnnual",
                    "Annual",
                    "MonthlyVariable"
                ],
                "type": "string"
            },
            "InstructedAmount": {
                "type": "object",
                "description": "InstructedAmountSerializer.",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^\\d{0,10}(\\.\\d{0,2})?$",
                        "description": "Instructed amount",
                        "minimum": 0.01
                    },
                    "currency": {
                        "type": "string",
                        "description": "Instructed amount currency",
                        "maxLength": 3
                    }
                },
                "required": [
                    "amount",
                    "currency"
                ]
            },
            "InstructedAmountRequest": {
                "type": "object",
                "description": "InstructedAmountSerializer.",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^\\d{0,10}(\\.\\d{0,2})?$",
                        "description": "Instructed amount",
                        "minimum": 0.01
                    },
                    "currency": {
                        "type": "string",
                        "description": "Instructed amount currency",
                        "maxLength": 3
                    }
                },
                "required": [
                    "amount",
                    "currency"
                ]
            },
            "JWTObtainPairRequest": {
                "type": "object",
                "description": "Obtain JWT pair.",
                "properties": {
                    "secret_id": {
                        "type": "string",
                        "description": "Secret id from /user-secrets/"
                    },
                    "secret_key": {
                        "type": "string",
                        "description": "Secret key from /user-secrets/"
                    }
                },
                "required": [
                    "secret_id",
                    "secret_key"
                ]
            },
            "JWTRefreshRequest": {
                "type": "object",
                "description": "Refresh access token.",
                "properties": {
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "refresh"
                ]
            },
            "PaginatedCreditorAccountList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreditorAccount"
                        }
                    }
                }
            },
            "PaginatedEndUserAgreementList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://ob.nordigen.com/api/v2/agreements/enduser/?limit=100&offset=0"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://ob.nordigen.com/api/v2/agreements/enduser/?limit=100&offset=0"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EndUserAgreement"
                        }
                    }
                }
            },
            "PaginatedPaymentReadList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentRead"
                        }
                    }
                }
            },
            "PaginatedRequisitionV2List": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://ob.nordigen.com/api/v2/requisitions/?limit=100&offset=0"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://ob.nordigen.com/api/v2/requisitions/?limit=100&offset=0"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequisitionV2"
                        }
                    }
                }
            },
            "PaymentProductEnum": {
                "enum": [
                    "T2P",
                    "SCT",
                    "ISCT",
                    "CBCT"
                ],
                "type": "string"
            },
            "PaymentRead": {
                "type": "object",
                "description": "PaymentReadSerializer.",
                "properties": {
                    "payment_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Payment ID"
                    },
                    "payment_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentStatusEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "Payment end to end identification"
                    },
                    "payment_product": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentProductEnum"
                            }
                        ],
                        "default": "ISCT",
                        "description": "Payment product"
                    },
                    "payment_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentTypeEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "Payment Type"
                    },
                    "redirect": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Redirect URL to your application after payment is done",
                        "maxLength": 1024
                    },
                    "description": {
                        "type": "string",
                        "default": "Payment via Nordigen",
                        "description": "Payment description"
                    },
                    "custom_payment_id": {
                        "type": "string",
                        "title": "Payment end to end identification.",
                        "description": "Payment end to end identification",
                        "maxLength": 35
                    },
                    "creditor_account": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Registered creditor account"
                    },
                    "debtor_account": {
                        "$ref": "#/components/schemas/DebtorAccountWrite"
                    },
                    "instructed_amount": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InstructedAmount"
                            }
                        ],
                        "description": "Instructed amount"
                    }
                },
                "required": [
                    "creditor_account",
                    "debtor_account",
                    "instructed_amount",
                    "redirect"
                ]
            },
            "PaymentStatusEnum": {
                "enum": [
                    "INIT",
                    "ERRE",
                    "ERRS",
                    "ACCC",
                    "ACCP",
                    "ACSC",
                    "ACSP",
                    "ACTC",
                    "ACWC",
                    "ACWP",
                    "RCVD",
                    "PDNG",
                    "RJCT",
                    "CANC",
                    "ACFC",
                    "PATC",
                    "PART"
                ],
                "type": "string"
            },
            "PaymentTypeEnum": {
                "enum": [
                    "single-payment",
                    "bulk-payment",
                    "periodic-payment"
                ],
                "type": "string"
            },
            "PaymentWrite": {
                "type": "object",
                "description": "PaymentWriteSerializer.",
                "properties": {
                    "link": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "default": "https://ob.nordigen.com/pis/start/06345bd5-1d8f-4c6e-b58e-e8277199f074/{$INSTITUTION_ID}",
                        "description": "Link to initiate authorization with Institution"
                    },
                    "payment_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Payment ID"
                    },
                    "payment_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentStatusEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "Payment end to end identification"
                    },
                    "payment_product": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentProductEnum"
                            }
                        ],
                        "default": "ISCT",
                        "description": "Payment product"
                    },
                    "payment_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentTypeEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "Payment Type"
                    },
                    "instructed_amount": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InstructedAmount"
                            }
                        ],
                        "description": "Instructed amount"
                    },
                    "creditor_account": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Registered creditor account"
                    },
                    "redirect": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Redirect URL to your application after payment is done",
                        "maxLength": 1024
                    },
                    "description": {
                        "type": "string",
                        "default": "Payment via Nordigen",
                        "description": "Payment description"
                    },
                    "custom_payment_id": {
                        "type": "string",
                        "title": "Payment end to end identification.",
                        "description": "Payment end to end identification",
                        "maxLength": 35
                    },
                    "requested_execution_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Payment Execution date (for periodic payments)"
                    },
                    "periodic_payment": {
                        "$ref": "#/components/schemas/PeriodicPayment"
                    }
                },
                "required": [
                    "creditor_account",
                    "instructed_amount",
                    "redirect"
                ]
            },
            "PaymentWriteRequest": {
                "type": "object",
                "description": "PaymentWriteSerializer.",
                "properties": {
                    "institution_id": {
                        "type": "string",
                        "writeOnly": true,
                        "default": "SWEDBANK_SANDBOX_SANDLV22",
                        "description": "Institution ID for Payment"
                    },
                    "payment_product": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentProductEnum"
                            }
                        ],
                        "default": "ISCT",
                        "description": "Payment product"
                    },
                    "instructed_amount": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InstructedAmountRequest"
                            }
                        ],
                        "description": "Instructed amount"
                    },
                    "creditor_account": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Registered creditor account"
                    },
                    "debtor_account": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DebtorAccountWriteRequest"
                            }
                        ],
                        "writeOnly": true,
                        "description": "Debtor account"
                    },
                    "redirect": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Redirect URL to your application after payment is done",
                        "maxLength": 1024
                    },
                    "description": {
                        "type": "string",
                        "default": "Payment via Nordigen",
                        "description": "Payment description"
                    },
                    "custom_payment_id": {
                        "type": "string",
                        "title": "Payment end to end identification.",
                        "description": "Payment end to end identification",
                        "maxLength": 35
                    },
                    "requested_execution_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Payment Execution date (for periodic payments)"
                    },
                    "periodic_payment": {
                        "$ref": "#/components/schemas/PeriodicPaymentRequest"
                    }
                },
                "required": [
                    "creditor_account",
                    "instructed_amount",
                    "redirect"
                ]
            },
            "PeriodicPayment": {
                "type": "object",
                "description": "Periodic Payment Serializer.",
                "properties": {
                    "frequency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FrequencyEnum"
                            }
                        ],
                        "default": "Monthly"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "execution_rule": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExecutionRuleEnum"
                            }
                        ],
                        "default": "following",
                        "description": "Behavior when periodic payment dates fall on holiday."
                    },
                    "day_of_execution": {
                        "type": "string"
                    }
                },
                "required": [
                    "start_date"
                ]
            },
            "PeriodicPaymentRequest": {
                "type": "object",
                "description": "Periodic Payment Serializer.",
                "properties": {
                    "frequency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FrequencyEnum"
                            }
                        ],
                        "default": "Monthly"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "execution_rule": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExecutionRuleEnum"
                            }
                        ],
                        "default": "following",
                        "description": "Behavior when periodic payment dates fall on holiday."
                    },
                    "day_of_execution": {
                        "type": "string"
                    }
                },
                "required": [
                    "start_date"
                ]
            },
            "PremiumAccountQuery": {
                "type": "object",
                "description": "Filter country.",
                "properties": {
                    "date_from": {
                        "type": "string",
                        "format": "date"
                    },
                    "date_to": {
                        "type": "string",
                        "format": "date"
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEnum"
                    }
                }
            },
            "RequisitionLinkParamsRequest": {
                "type": "object",
                "description": "RequisitionLinkParamsSerializer.",
                "properties": {
                    "aspsp_id": {
                        "type": "string",
                        "description": "ASPSP ID. Should match one used while creating EUA, if it's linked to this requisition"
                    }
                },
                "required": [
                    "aspsp_id"
                ]
            },
            "RequisitionLinks": {
                "type": "object",
                "description": "RequisitionLinksSerializer.",
                "properties": {
                    "initiate": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                }
            },
            "RequisitionV2": {
                "type": "object",
                "description": "RequisitionV2Serializer.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true,
                        "title": "Created Date",
                        "description": "The date & time at which the requisition was created."
                    },
                    "redirect": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "redirect URL to your application after end-user authorization with ASPSP",
                        "maxLength": 1024
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status1c5Enum"
                            }
                        ],
                        "title": "Requisition status",
                        "readOnly": true,
                        "description": "status of this requisition"
                    },
                    "institution_id": {
                        "type": "string",
                        "description": "an Institution ID for this Requisition"
                    },
                    "agreement": {
                        "type": "string",
                        "format": "uuid",
                        "description": "EUA associated with this requisition"
                    },
                    "reference": {
                        "type": "string",
                        "description": "additional ID to identify the end user",
                        "maxLength": 256
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "title": "accounts"
                        },
                        "readOnly": true,
                        "description": "array of account IDs retrieved within a scope of this requisition"
                    },
                    "user_language": {
                        "type": "string",
                        "description": "A two-letter country code (ISO 639-1)",
                        "maxLength": 5
                    },
                    "link": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "default": "https://ob.nordigen.com/psd2/start/3fa85f64-5717-4562-b3fc-2c963f66afa6/{$INSTITUTION_ID}",
                        "description": "link to initiate authorization with Institution"
                    },
                    "ssn": {
                        "type": "string",
                        "description": "optional SSN field to verify ownership of the account",
                        "maxLength": 64
                    },
                    "account_selection": {
                        "type": "boolean",
                        "default": false,
                        "description": "option to enable account selection view for the end user"
                    },
                    "redirect_immediate": {
                        "type": "boolean",
                        "default": false,
                        "description": "enable redirect back to the client after account list received"
                    }
                },
                "required": [
                    "institution_id",
                    "redirect"
                ]
            },
            "RequisitionV2Request": {
                "type": "object",
                "description": "RequisitionV2Serializer.",
                "properties": {
                    "redirect": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "redirect URL to your application after end-user authorization with ASPSP",
                        "maxLength": 1024
                    },
                    "institution_id": {
                        "type": "string",
                        "description": "an Institution ID for this Requisition"
                    },
                    "agreement": {
                        "type": "string",
                        "format": "uuid",
                        "description": "EUA associated with this requisition"
                    },
                    "reference": {
                        "type": "string",
                        "description": "additional ID to identify the end user",
                        "maxLength": 256
                    },
                    "user_language": {
                        "type": "string",
                        "description": "A two-letter country code (ISO 639-1)",
                        "maxLength": 5
                    },
                    "ssn": {
                        "type": "string",
                        "description": "optional SSN field to verify ownership of the account",
                        "maxLength": 64
                    },
                    "account_selection": {
                        "type": "boolean",
                        "default": false,
                        "description": "option to enable account selection view for the end user"
                    },
                    "redirect_immediate": {
                        "type": "boolean",
                        "default": false,
                        "description": "enable redirect back to the client after account list received"
                    }
                },
                "required": [
                    "institution_id",
                    "redirect"
                ]
            },
            "SpectacularJWTObtain": {
                "type": "object",
                "description": "Obtain new JWT pair.",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Your access token"
                    },
                    "access_expires": {
                        "type": "integer",
                        "readOnly": true,
                        "default": 86400,
                        "description": "Access token expires in seconds"
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Your refresh token"
                    },
                    "refresh_expires": {
                        "type": "integer",
                        "readOnly": true,
                        "default": 2592000,
                        "description": "Refresh token expires in seconds"
                    }
                }
            },
            "SpectacularJWTRefresh": {
                "type": "object",
                "description": "Refresh Access token.",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Your access token"
                    },
                    "access_expires": {
                        "type": "integer",
                        "readOnly": true,
                        "default": 86400,
                        "description": "Access token expires in seconds"
                    }
                }
            },
            "SpectacularRequisitionV2": {
                "type": "object",
                "description": "Create requisition.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true,
                        "title": "Created Date",
                        "description": "The date & time at which the requisition was created."
                    },
                    "redirect": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "redirect URL to your application after end-user authorization with ASPSP",
                        "maxLength": 1024
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status1c5Enum"
                            }
                        ],
                        "title": "Requisition status",
                        "readOnly": true,
                        "description": "status of this requisition"
                    },
                    "institution_id": {
                        "type": "string",
                        "description": "an Institution ID for this Requisition"
                    },
                    "agreement": {
                        "type": "string",
                        "format": "uuid",
                        "description": "EUA associated with this requisition"
                    },
                    "reference": {
                        "type": "string",
                        "description": "additional ID to identify the end user",
                        "maxLength": 256
                    },
                    "accounts": {
                        "type": "array",
                        "items": {},
                        "readOnly": true,
                        "default": [],
                        "description": "array of account IDs retrieved within a scope of this requisition"
                    },
                    "user_language": {
                        "type": "string",
                        "description": "A two-letter country code (ISO 639-1)",
                        "maxLength": 5
                    },
                    "link": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "default": "https://ob.nordigen.com/psd2/start/3fa85f64-5717-4562-b3fc-2c963f66afa6/{$INSTITUTION_ID}",
                        "description": "link to initiate authorization with Institution"
                    },
                    "ssn": {
                        "type": "string",
                        "description": "optional SSN field to verify ownership of the account",
                        "maxLength": 64
                    },
                    "account_selection": {
                        "type": "boolean",
                        "default": false,
                        "description": "option to enable account selection view for the end user"
                    },
                    "redirect_immediate": {
                        "type": "boolean",
                        "default": false,
                        "description": "enable redirect back to the client after account list received"
                    }
                },
                "required": [
                    "institution_id",
                    "redirect"
                ]
            },
            "Status1c5Enum": {
                "enum": [
                    "CR",
                    "ID",
                    "LN",
                    "RJ",
                    "ER",
                    "SU",
                    "EX",
                    "GC",
                    "UA",
                    "GA",
                    "SA"
                ],
                "type": "string"
            },
            "TypeEnum": {
                "enum": [
                    "IBAN"
                ],
                "type": "string"
            }
        },
        "securitySchemes": {
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "Bearer"
            }
        }
    },
    "security": [
        {
            "jwtAuth": []
        }
    ],
    "servers": [
        {
            "url": "https://ob.nordigen.com"
        }
    ]
}