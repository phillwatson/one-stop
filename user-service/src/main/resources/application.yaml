mp:
  jwt:
    verify:
      audiences: com.hillayes
      issuer: https://hillayes.com/one-stop
      publickey:
        location: http://user-service:8080/api/v1/auth/jwks.json
    token:
      header: Cookie
      cookie: 'access_token'

smallrye:
  config:
    mapping:
      validate-unknown: false # ignore unknown config properties

  jwt:
    jwks:
      refresh-interval: 15
      forced-refresh-interval: 5

# configure production datasource
"%prod":
  quarkus:
    datasource:
      db-kind: postgresql
      #username: one-stop
      #password: password
      jdbc:
        url: jdbc:postgresql://db:5432/one-stop

quarkus:
  flyway:
    migrate-at-start: true
    schemas: users

  hibernate-orm:
    database:
      default-schema: users

  rest-client:
    google-api:
      url: https://oauth2.googleapis.com

  log:
    min-level: TRACE
    level: INFO
    console:
      format: "%d{yyyy-MM-dd HH:mm:ss,S} %-5p %X{correlationId} - [%c{3.}] (%t) %s%e%n"
    category:
      "io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator":
        level: INFO
      "org.jose4j.jwk":
        level: INFO
      "com.hillayes":
        level: DEBUG

one-stop:
  jwt:
    access-token:
      duration-secs: 300
    refresh-token:
      cookie: 'refresh_token'
      duration-secs: 1800
  jwk:
    set-size: 2
  auth:
    xsrf:
      cookie-name: 'XSRF-TOKEN'
      header-name: 'X-XSRF-TOKEN'
      duration-secs: 1800
      # secret: 'this will be passed in via docker env'

    openid:
      GOOGLE:
        config-uri: 'https://accounts.google.com/.well-known/openid-configuration'
        client-id: '284564870769-e3qm0g1dgim9kjd1gp3qmia610evn88a.apps.googleusercontent.com'
        redirect-uri: 'http://localhost/api/v1/auth/validate/google'

      APPLE:
        config-uri: 'https://appleid.apple.com/.well-known/openid-configuration'
        team-id: 'my-apple-team-id'
        client-id: 'my-apple-registered-client-id'
        key-id: 'my-apple-key-id'
        redirect-uri: 'http://hibanapay/api/v1/auth/validate/apple'
        # not a real private key, just for testing
        private-key: "-----BEGIN PRIVATE KEY-----\nMEECAQAwEwYHKoZIzj0CAQYIKoZIzj0DAQcEJzAlAgEBBCA6nm1eLiBDy75X8MVo\ncS9FmrW/F0Aivh5YGZQ0MpZkAQ==\n-----END PRIVATE KEY-----"

"%test":
  quarkus:
    hibernate-orm:
      log:
        sql: true
        bind-parameters: true

  one-stop:
    auth:
      xsrf:
        secret: this is a secret for xsrf tokens
      openid:
        GOOGLE:
          client-secret: 'a-google-generated-secret'
        APPLE:
          key-id: 'my-apple-key-id'
          client-secret: 'an-apple-generated-secret'
